DROP TABLE IF EXISTS users CASCADE;
DROP TABLE IF EXISTS items CASCADE;
DROP TABLE IF EXISTS bookings CASCADE;
DROP TABLE IF EXISTS requests CASCADE;
DROP TABLE IF EXISTS comments CASCADE;

CREATE TABLE IF NOT EXISTS users (
	id bigint GENERATED BY DEFAULT AS IDENTITY NOT NULL,
	user_name varchar NOT NULL,
	email varchar NOT NULL,
	CONSTRAINT user_pk PRIMARY KEY (id)
);
CREATE TABLE IF NOT EXISTS requests (
	id bigint GENERATED BY DEFAULT AS IDENTITY NOT NULL,
	description varchar NULL,
	requestor_id bigint NOT NULL,
	created timestamp without time zone NULL,
	CONSTRAINT requests_pk PRIMARY KEY (id),
	CONSTRAINT requests_users_fk FOREIGN KEY (requestor_id) REFERENCES users(id) ON DELETE CASCADE ON UPDATE CASCADE
);
CREATE TABLE IF NOT EXISTS items (
	id bigint GENERATED BY DEFAULT AS IDENTITY NOT NULL,
	item_name varchar NOT NULL,
	description varchar NULL,
	available bool NULL,
	request_id bigint NULL,
	owner_id bigint NULL,
	CONSTRAINT items_pk PRIMARY KEY (id),
	CONSTRAINT items_requests_fk FOREIGN KEY (request_id) REFERENCES public.requests(id) ON DELETE CASCADE ON UPDATE CASCADE,
	CONSTRAINT items_users_fk FOREIGN KEY (owner_id) REFERENCES users(id) ON DELETE CASCADE ON UPDATE CASCADE
);
CREATE TABLE IF NOT EXISTS bookings (
	id bigint GENERATED BY DEFAULT AS IDENTITY NOT NULL,
	start_time timestamp without time zone NULL,
	end_time timestamp without time zone NULL,
	item_id bigint NOT NULL,
	booker_id bigint NOT NULL,
	status varchar NULL,
	CONSTRAINT bookings_pk PRIMARY KEY (id),
	CONSTRAINT bookings_items_fk FOREIGN KEY (item_id) REFERENCES items(id) ON DELETE CASCADE ON UPDATE CASCADE,
	CONSTRAINT bookings_users_fk FOREIGN KEY (booker_id) REFERENCES users(id) ON DELETE CASCADE ON UPDATE CASCADE
);
CREATE TABLE IF NOT EXISTS comments (
	id bigint GENERATED BY DEFAULT AS IDENTITY NOT NULL,
	text varchar NULL,
	item_id bigint NOT NULL,
	author bigint NOT NULL,
	created timestamp without time zone NULL,
	CONSTRAINT comments_pk PRIMARY KEY (id),
	CONSTRAINT comments_items_fk FOREIGN KEY (item_id) REFERENCES items(id) ON DELETE CASCADE ON UPDATE CASCADE,
	CONSTRAINT comments_users_fk FOREIGN KEY (author) REFERENCES users(id) ON DELETE CASCADE ON UPDATE CASCADE
);

